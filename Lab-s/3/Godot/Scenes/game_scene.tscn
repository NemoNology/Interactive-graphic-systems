[gd_scene load_steps=6 format=3 uid="uid://c4webp2nitd4e"]

[ext_resource type="PackedScene" uid="uid://deqpkf0dhlqqk" path="res://Scenes/app_background.tscn" id="1_7exoi"]
[ext_resource type="Theme" uid="uid://gdkj8rebp5pw" path="res://Assets/Themes/Main.tres" id="1_k83q5"]
[ext_resource type="Script" path="res://Scripts/card_field.gd" id="2_qxufx"]

[sub_resource type="GDScript" id="GDScript_1m53h"]
script/source = "extends Control

@export_category(\"Game scene controller\")
var health_points: int = GameController.health_points
@export var card_field: CardField
@export var lives_output: Label
@export var game_time_output: Label
@export var start_time_output: Label
@export var start_time_control: Control
@export var lives_control: Control
@export var game_time_control: Control
var start_timer: Timer = Timer.new()
var game_timer: Timer
var card_buffer: int = -1

func _ready():
	GameController.is_win = false
	card_field.card_pairs_amount = GameController.pairs_count
	card_field.card_toogled.connect(_on_card_selected)
	card_field.item_rect_changed.connect(_on_card_field_size_changed)
	start_timer.wait_time = 4
	start_timer.autostart = true
	start_timer.timeout.connect(_start)
	add_child(start_timer)

func _process(delta):
	if start_timer != null:
		start_time_output.text = str(roundi(start_timer.time_left))
	if GameController.is_timer_on and game_timer != null:
		game_time_output.text = str(roundi(game_timer.time_left))

func _on_card_selected(id: int, _is_card_front: bool):
	if card_buffer < 0:
		card_buffer = id
		return
	elif card_buffer == id:
		card_field.remove_cards_by_id(id)
		if card_field.get_child_count() == 0:
			GameController.is_win = true
			_game_over()
	else:
		card_field.flip_cards_to(false, true)
		if GameController.is_health_on:
			health_points -= 1
			lives_output.text = str(health_points)
			if health_points < 1:
				_game_over()
	card_buffer = -1

func _start():
	start_timer.queue_free()
	start_time_control.visible = false
	card_field.flip_cards_to(false)
	if GameController.is_health_on:
		lives_output.text = str(GameController.health_points)
		lives_control.visible = true
	if GameController.is_timer_on:
		game_time_control.visible = true
		game_timer = Timer.new()
		game_timer.autostart = true
		game_timer.wait_time = GameController.game_time
		game_timer.timeout.connect(_game_over)
		add_child(game_timer)

func _game_over():
	get_tree().change_scene_to_file(\"res://Scenes/game_end.tscn\")

func _on_card_field_size_changed():
	card_field.reset_cards()
"

[sub_resource type="GDScript" id="GDScript_tm4c6"]
script/source = "extends Button

func _pressed():
	get_tree().change_scene_to_file(\"res://Scenes/game_settings.tscn\")
"

[node name="GameScene" type="Control" node_paths=PackedStringArray("card_field", "lives_output", "game_time_output", "start_time_output", "start_time_control", "lives_control", "game_time_control")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1_k83q5")
script = SubResource("GDScript_1m53h")
card_field = NodePath("MarginContainer/VBoxContainer/CardField")
lives_output = NodePath("MarginContainer/VBoxContainer/Status bar/Health/Value")
game_time_output = NodePath("MarginContainer/VBoxContainer/Status bar/Timer/Value")
start_time_output = NodePath("MarginContainer/VBoxContainer/Status bar/Start time/Value")
start_time_control = NodePath("MarginContainer/VBoxContainer/Status bar/Start time")
lives_control = NodePath("MarginContainer/VBoxContainer/Status bar/Health")
game_time_control = NodePath("MarginContainer/VBoxContainer/Status bar/Timer")

[node name="Control" parent="." instance=ExtResource("1_7exoi")]
layout_mode = 1

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 16
theme_override_constants/margin_top = 16
theme_override_constants/margin_right = 16
theme_override_constants/margin_bottom = 16

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
layout_mode = 2

[node name="Status bar" type="HBoxContainer" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 32

[node name="Health" type="HBoxContainer" parent="MarginContainer/VBoxContainer/Status bar"]
visible = false
layout_mode = 2
size_flags_horizontal = 3

[node name="Title" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Health"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "Здоровье:"

[node name="Value" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Health"]
layout_mode = 2
theme_override_font_sizes/font_size = 32

[node name="Start time" type="HBoxContainer" parent="MarginContainer/VBoxContainer/Status bar"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Title" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Start time"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "Начало через:"

[node name="Value" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Start time"]
layout_mode = 2
theme_override_font_sizes/font_size = 32

[node name="Timer" type="HBoxContainer" parent="MarginContainer/VBoxContainer/Status bar"]
visible = false
layout_mode = 2
size_flags_horizontal = 8

[node name="Title" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Timer"]
layout_mode = 2
theme_override_font_sizes/font_size = 32
text = "Время:"

[node name="Value" type="Label" parent="MarginContainer/VBoxContainer/Status bar/Timer"]
layout_mode = 2
theme_override_font_sizes/font_size = 32

[node name="Button" type="Button" parent="MarginContainer/VBoxContainer/Status bar"]
layout_mode = 2
size_flags_horizontal = 10
text = "Вернуться назад"
script = SubResource("GDScript_tm4c6")

[node name="CardField" type="Container" parent="MarginContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
script = ExtResource("2_qxufx")
